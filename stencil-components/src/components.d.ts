/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { IDroppableControlInput } from "./components/models/index";
export namespace Components {
    interface KzDraggable {
        "dropData": any;
        "droppableList": any;
    }
    interface KzDroppable {
        "complete": (ev: any, data: any) => Promise<void>;
        "input": IDroppableControlInput;
    }
}
export interface KzDroppableCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLKzDroppableElement;
}
declare global {
    interface HTMLKzDraggableElement extends Components.KzDraggable, HTMLStencilElement {
    }
    var HTMLKzDraggableElement: {
        prototype: HTMLKzDraggableElement;
        new (): HTMLKzDraggableElement;
    };
    interface HTMLKzDroppableElement extends Components.KzDroppable, HTMLStencilElement {
    }
    var HTMLKzDroppableElement: {
        prototype: HTMLKzDroppableElement;
        new (): HTMLKzDroppableElement;
    };
    interface HTMLElementTagNameMap {
        "kz-draggable": HTMLKzDraggableElement;
        "kz-droppable": HTMLKzDroppableElement;
    }
}
declare namespace LocalJSX {
    interface KzDraggable {
        "dropData"?: any;
        "droppableList"?: any;
    }
    interface KzDroppable {
        "input"?: IDroppableControlInput;
        "onElementDropped"?: (event: KzDroppableCustomEvent<any>) => void;
    }
    interface IntrinsicElements {
        "kz-draggable": KzDraggable;
        "kz-droppable": KzDroppable;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "kz-draggable": LocalJSX.KzDraggable & JSXBase.HTMLAttributes<HTMLKzDraggableElement>;
            "kz-droppable": LocalJSX.KzDroppable & JSXBase.HTMLAttributes<HTMLKzDroppableElement>;
        }
    }
}
